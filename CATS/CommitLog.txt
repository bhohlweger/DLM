I have added the possibility to make a cut on the total momentum of the pairs. The cut can be applied after loading the data.

27.06.2017, CATS 1.1
-The potentials are now saved as an array of functions (ShortRangePotential). I have changed the "polarization" therminology with "channels". 
-The user can now have multiple channels (e.g. related to the spin) and for each of them all partial-wave potentials need to be defined!
-The potential itself should be defined as f(double* par)

30.06.2017
-I made the code much more robust against division by zero. This fixed a bug resulting in 'nan' states of C(k) in some rare cases.

13.07.2017, CATS 1.2
-there was a major flaw in the way the folding was performed under the assuption that the angle theta should be taken into account.
 This issue has been now correctly implemented.
-I have added some new Get-function in CATS (to access the info about the data-source)

10.08.2017, CATS 1.4
this is a huge commit, since there was the need to change the computing grid.
There is an intermediate version 1.3 that was never commited due to some problems with it.
In the end version 1.4 should be something as a beta-version to a planned version 2.0.
The new computing grid in 1.4 works as follows:
for each k,b bin one looks at the source functions and creates a source-grid. The source-grid 
is practically a tree, which is divided into segments until the value of the source function 
reaches some minimal value. This allows to create as few grid-bins as possible and save memory and computing time.
HOWEVER: there is one big issue that needs to be taken care of in 2.0 :
a single k,b bins has on average quite few entries, which leads to issues when subdividing the grid, 
e.g. we never actually reach the desired low-limit and form a lot of zero-valued grid bins. In addition, if we have a lot of 
b-bins computing time will be quite large. The idea for 2.0 is to to make the grid the same for all b-bins based on all particle 
pairs regardless of their b-value. Then evaluate the wave-function for each grid-bin and save this value. Such a procedure will 
make sure that we do not re-evaluate the wave-function for each b-bin!

19.09.2017 CATS 2.0
The first beta version. I have implemented most of the things described in CATS 1.4, however the commit was done in a 
bit of a haste, as a result a proper documentation and description of all current features will follow in future commits.

22.09.2017 CATS 2.0 (BugFix1)
There was a small bug resulting in a false warning message. Analysis results are unaffected.

04.10.2017 CATS 2.1
Per user-request: added Get and Eval functions for the radial wave function

16.10.2017 CATS 2.2
Included some additional function (e.g. customize the output) without changing the functionality

18.10.2017 CATS 2.2 (clean 1)
some cleaning of the code was performed

21.10.2017 CATS 2.3
added functions to manage the parameters of the source and the potential in a easier way. 
Now the parameters can be set by calling SetAnaSource and SetShortRangePotential.
N.B. use those functions with care, as misusing might result in writing to unallocated memory!
See the comments in CATS.h for further details.

27.10.2017 CATS 2.4
A bug resulting in a wrong determination of the wave-function at large r found and fixed. 
It was noticed that the GNU functions used for the assymptotic solutions do show errors for high momenta (>150 MeV) and r<10 fm.
Therefore be advised to care when using large sources (>2 fm), since the solution may become unstable for higher momenta!

08.11.2017 CATS 2.5.0 (unstable)
One design flaw was found and repaired. 
Basically now one always needs to specify the Spin for each channel regardless of whether a potential is defined, using the function SetSpin(...).
This results in reduction of the arguments for SetShortRangePotential (this Spin is not a required input any more).
Further an issue has been reported, than when reusing the same CATS object by changing the set up (mostly the number of channels and potentials used) 
there might be a problem with the memory management resulting in undefined behaviour. Do note that even without a crash one may simply get a wrong result. 
Please until the reason has been found and fix refrain from reusing the same CATS object for different set ups.

09.11.2017 CATS 2.5.1 (unstable)
Yet another design flaw found. This one had to do with the way CATS handled the weights of the different channels.
The issue has been repaired without changing any functionality.

28.11.2017 CATS 2.6
The instabilities reported regarding version 2.5 were found to be unraleted to CATS, but to a bug in the analysis framework with which CATS was tested.
To improve performance when reevaluating C(k) the user now has the freedom to force CATS to use the same source-computing-grid when changing the source.
While this option can be very useful for e.g. when fitting, please be aware that if there is a significant modification in the PDF of the source, than 
the accuarcy of the computation might decrease, or in an extreme case CATS may crash! So use it with care and only when fine-tuning the source!

04.12.2017 CATS 2.7
After an additional check it was found that there was indeed a bug related to the asymptotic solution, which under circumstances could have lead to an undefined memory access and false results in single k-bins. The bug has been fixed.
A new option for the wave-function is added - namely using the function UseExternalWaveFunction one could now insert the wave-function into CATS, overriding the Schroedinger solever.
Further optimization related to the linear interpolation algorithms in CATS were done.

18.03.2018 CATS 2.8
Added the option to renormalize the transport-model defined source a bit faster, using the function "SetPoorManRenorm".

CATS 2.9
Added the option to evaluate the asymptotic solution
Some Eval functions taking the radius as an argument were assuming the input to be in natural units. This has been now changed to fm.
Added the option to switch the quantum statistics on/off independently from the particle ID

CATS 2.10
Addet an option to introduce a cut-off of the source.
For the extentions: some changes in the input regarding the external wave functions.
                    a minor bug fix related to the smearing matrix
Added a CMake example how to compile CATS, or a project that uses CATS
Note that this is a very basic example and can be certainly improved a lot by the user!
